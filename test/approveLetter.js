'use strict';

// tests for approveLetter
// Generated by serverless-mocha-plugin

const mochaPlugin = require('serverless-mocha-plugin');
const request = require('request-promise-native');
const sinon = require('sinon');
const expect = mochaPlugin.chai.expect;
const fileHelper = require('./fileHelper');
const ProviderWrapper = require('../src/providerWrapper');

let wrapped = mochaPlugin.getWrapper('approveLetter', '/src/approveLetter.js', 'entryPoint');

describe('approveLetter Integration Tests', () => {
  let sendEmailFake;

  beforeEach(function () {
    sendEmailFake = sinon.fake.throws('uh oh');
    sinon.replace(ProviderWrapper, 'sendEmail', sendEmailFake);
    sinon.replace(request, 'post', sinon.fake());
  });

  afterEach(function () {
    sinon.restore();
  });

  it('calls SES.sendEmail with the expected object', (done) => {
    let payload = fileHelper.readJsonFile('test/data/approveLetterValidInputPayload.json');
    let encodedPayload = encodeURIComponent(JSON.stringify(payload));

    let event = {
      headers: { 'content-type': 'application/json' },
      body: `payload=${encodedPayload}`
    };

    wrapped.run(event).then((response) => {
      expect(response).to.not.be.empty;
      expect(sendEmailFake.calledOnce).to.be.true;
      const objectActuallyPassedToSES = sendEmailFake.firstCall.args[0];
      const objectExpectedToBePassedToSES = fileHelper.readJsonFile('test/data/approveLetterValidNodemailerParameter.json');
      expect(objectActuallyPassedToSES).to.deep.equal(objectExpectedToBePassedToSES);
      done();
    });
  });
});
